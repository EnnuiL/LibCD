buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Fabric'
			url = 'http://maven.modmuss50.me/'
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.2.6-SNAPSHOT"
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id "com.jfrog.artifactory" version "4.9.0"
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin

sourceCompatibility = 1.8
targetCompatibility = 1.8

if(rootProject.file('private.gradle').exists()) { //Publishing details
	apply from: 'private.gradle'
}

archivesBaseName = "libcd"
group = "io.github.cottonmc"
version = "1.6.0+1.14.4"

minecraft {
	refmapName = 'mixins.libcd.refmap.json'
}

repositories {
	mavenCentral()
	maven { url "http://server.bbkr.space:8081/artifactory/libs-release" }
}

dependencies {
	minecraft "com.mojang:minecraft:19w46b"
	mappings "net.fabricmc:yarn:19w46b+build.1:v2"
	modApi "net.fabricmc:fabric-loader:0.6.4+build.169"
	modApi "net.fabricmc.fabric-api:fabric-api:0.4.12+build.261-1.15"
	implementation "com.google.code.findbugs:jsr305:3.0.2"
	
	modApi "io.github.cottonmc:Jankson-Fabric:2.0.0+j1.2.0"
	include "io.github.cottonmc:Jankson-Fabric:2.0.0+j1.2.0"
}

processResources {
	inputs.property "version", project.version
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			//artifact(jar) {
			//	builtBy remapJar
			//}
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "http://server.bbkr.space:8081/artifactory/"
		publish {
			repository {
				if (version.contains("SNAPSHOT")) {
					repoKey = "libs-snapshot"
				} else {
					repoKey = "libs-release"
				}

				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")

				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}
